{
  "openapi": "3.0.1",
  "info": {
    "title": "API V1",
    "version": "v1"
  },
  "paths": {
    "/public_api/airops_apps/executions/{execution_uuid}": {
      "get": {
        "summary": "Retrieve an execution",
        "description": " Returns the **execution** with the given uuid. You can use this endpoint to check the status of the execution. ",
        "tags": [
          "Executions"
        ],
        "operationId": "getExecution",
        "parameters": [
          {
            "description": "The execution id",
            "name": "execution_uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Execution found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "pending",
                        "running",
                        "error",
                        "success",
                        "cancelled",
                        "review_needed"
                      ],
                      "example": "success"
                    },
                    "airops_apps_version_id": {
                      "type": "integer",
                      "example": 21
                    },
                    "conversation_id": {
                      "type": "string",
                      "example": 23
                    },
                    "credits_used": {
                      "type": "integer",
                      "example": 34
                    },
                    "error_code": {
                      "type": "string",
                      "example": null
                    },
                    "error_message": {
                      "example": null
                    },
                    "feedback": {
                      "type": "string",
                      "enum": [
                        "positive",
                        "neutral",
                        "negative"
                      ]
                    },
                    "inputs": {
                      "type": "object",
                      "example": {
                        "name": "John Doe"
                      }
                    },
                    "output": {
                      "type": "object",
                      "example": {
                        "greet": "Hello John Doe!"
                      }
                    },
                    "runtime": {
                      "type": "integer",
                      "example": 34,
                      "description": "The time it took to execute the app in seconds"
                    },
                    "source": {
                      "type": "string"
                    },
                    "uuid": {
                      "type": "string",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "c3405f16-d0e8-4d5c-8ad9-85ef332c44ee"
                    },
                    "workspace_id": {
                      "type": "integer",
                      "example": 1
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-02-01T16:39:28.161Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-02-01T16:39:28.161Z"
                    }
                  },
                  "required": [
                    "id",
                    "status",
                    "createdAt",
                    "updatedAt"
                  ]
                },
                "example": {
                  "id": 22,
                  "status": "success",
                  "airops_apps_version_id": 21,
                  "conversation_id": 23,
                  "credits_used": 34,
                  "error_code": null,
                  "error_message": null,
                  "feedback": "positive",
                  "inputs": {
                    "name": "John Doe"
                  },
                  "output": {
                    "greet": "Hello John Doe!"
                  },
                  "runtime": 34,
                  "source": null,
                  "uuid": "c3405f16-d0e8-4d5c-8ad9-85ef332c44ee",
                  "workspace_id": 1,
                  "createdAt": "2024-02-01T16:39:28.161Z",
                  "updatedAt": "2024-02-01T16:39:28.161Z"
                }
              }
            }
          },
          "401": {
            "description": "Authentication error"
          }
        }
      }
    },
    "/public_api/airops_apps/{app_uuid}/execute": {
      "post": {
        "summary": "Execute",
        "description": " This endpoint allows you to execute an app. You can use this endpoint to execute an app and get the output of the execution.\n\n Preconditions: the app must be **published**.\n\n\n> This endpoint executes the app immediately and returns the result, unless you are at your current capacity, or your app takes more than 10 minutes to run, in which case it will fail.\n\n If you want to execute an app asynchronously, use the [async_execute](#/paths/~1public_api~1airops_apps~1{app_uuid}~1async_execute/post) endpoint.\n\n ",
        "tags": [
          "Executions"
        ],
        "operationId": "executeApp",
        "parameters": [
          {
            "description": "The app uuid",
            "name": "app_uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version_slug": {
                    "type": "integer",
                    "example": "12",
                    "description": "The version of the app (will use the default version if not provided)"
                  },
                  "inputs": {
                    "type": "object",
                    "example": {
                      "name": "John Doe"
                    },
                    "description": "The inputs of the app"
                  }
                },
                "required": [
                  "inputs"
                ]
              },
              "example": {
                "inputs": {
                  "name": "John Doe"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Execution created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "airops_app_execution": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "pending",
                            "running",
                            "error",
                            "success",
                            "cancelled",
                            "review_needed"
                          ],
                          "example": "success"
                        },
                        "airops_apps_version_id": {
                          "type": "integer",
                          "example": 21
                        },
                        "conversation_id": {
                          "type": "string",
                          "example": 23
                        },
                        "credits_used": {
                          "type": "integer",
                          "example": 34
                        },
                        "error_code": {
                          "type": "string",
                          "example": null
                        },
                        "error_message": {
                          "example": null
                        },
                        "feedback": {
                          "type": "string",
                          "enum": [
                            "positive",
                            "neutral",
                            "negative"
                          ]
                        },
                        "inputs": {
                          "type": "object",
                          "example": {
                            "name": "John Doe"
                          }
                        },
                        "output": {
                          "type": "object",
                          "example": {
                            "greet": "Hello John Doe!"
                          }
                        },
                        "runtime": {
                          "type": "integer",
                          "example": 34,
                          "description": "The time it took to execute the app in seconds"
                        },
                        "source": {
                          "type": "string"
                        },
                        "uuid": {
                          "type": "string",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "c3405f16-d0e8-4d5c-8ad9-85ef332c44ee"
                        },
                        "workspace_id": {
                          "type": "integer",
                          "example": 1
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-02-01T16:39:28.161Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-02-01T16:39:28.161Z"
                        }
                      },
                      "required": [
                        "id",
                        "status",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  }
                },
                "example": {
                  "id": 22,
                  "status": "success",
                  "airops_apps_version_id": 21,
                  "conversation_id": 23,
                  "credits_used": 34,
                  "error_code": null,
                  "error_message": null,
                  "feedback": "positive",
                  "inputs": {
                    "name": "John Doe"
                  },
                  "output": {
                    "greet": "Hello John Doe!"
                  },
                  "runtime": 34,
                  "source": null,
                  "uuid": "c3405f16-d0e8-4d5c-8ad9-85ef332c44ee",
                  "workspace_id": 1,
                  "createdAt": "2024-02-01T16:39:28.161Z",
                  "updatedAt": "2024-02-01T16:39:28.161Z"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "name_input_value can't be blank"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error"
          }
        }
      }
    },
    "/public_api/airops_apps/{app_uuid}/async_execute": {
      "post": {
        "summary": "Async Execute",
        "description": " This endpoint allows you to execute an app asynchronously. You can use this endpoint to execute an app and get the execution id to check the status of the execution.\n\n Preconditions: the app must be **published**.\n\n\n> Executions created through this endpoint will be queued and executed at your workspace's capacity.\n\n If you want to execute an app immediately, use the [execute](#/paths/~1public_api~1airops_apps~1{app_uuid}~1execute/post) endpoint.\n\n ",
        "tags": [
          "Executions"
        ],
        "operationId": "asyncExecuteApp",
        "parameters": [
          {
            "name": "app_uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The app uuid, you can find the app uuid by going to the App => Integrate"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version_slug": {
                    "type": "integer",
                    "example": "12",
                    "description": "The version of the app (will use the default version if not provided)"
                  },
                  "inputs": {
                    "type": "object",
                    "example": {
                      "name": "John Doe"
                    },
                    "description": "The inputs of the app"
                  }
                },
                "required": [
                  "inputs"
                ]
              },
              "example": {
                "inputs": {
                  "name": "John Doe"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Execution created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "airops_app_execution": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "pending",
                            "running",
                            "error",
                            "success",
                            "cancelled",
                            "review_needed"
                          ],
                          "example": "success"
                        },
                        "airops_apps_version_id": {
                          "type": "integer",
                          "example": 21
                        },
                        "conversation_id": {
                          "type": "string",
                          "example": 23
                        },
                        "credits_used": {
                          "type": "integer",
                          "example": 34
                        },
                        "error_code": {
                          "type": "string",
                          "example": null
                        },
                        "error_message": {
                          "example": null
                        },
                        "feedback": {
                          "type": "string",
                          "enum": [
                            "positive",
                            "neutral",
                            "negative"
                          ]
                        },
                        "inputs": {
                          "type": "object",
                          "example": {
                            "name": "John Doe"
                          }
                        },
                        "output": {
                          "type": "object",
                          "example": {
                            "greet": "Hello John Doe!"
                          }
                        },
                        "runtime": {
                          "type": "integer",
                          "example": 34,
                          "description": "The time it took to execute the app in seconds"
                        },
                        "source": {
                          "type": "string"
                        },
                        "uuid": {
                          "type": "string",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "c3405f16-d0e8-4d5c-8ad9-85ef332c44ee"
                        },
                        "workspace_id": {
                          "type": "integer",
                          "example": 1
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-02-01T16:39:28.161Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-02-01T16:39:28.161Z"
                        }
                      },
                      "required": [
                        "id",
                        "status",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  }
                },
                "example": {
                  "id": 22,
                  "status": "pending",
                  "airops_apps_version_id": 21,
                  "conversation_id": null,
                  "credits_used": 34,
                  "error_code": null,
                  "error_message": null,
                  "feedback": null,
                  "inputs": {
                    "name": "John Doe"
                  },
                  "output": null,
                  "runtime": null,
                  "source": null,
                  "uuid": "c3405f16-d0e8-4d5c-8ad9-85ef332c44ee",
                  "workspace_id": 1,
                  "createdAt": "2024-02-01T16:39:28.161Z",
                  "updatedAt": "2024-02-01T16:39:28.161Z"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "name_input_value can't be blank"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error"
          }
        }
      }
    },
    "/public_api/airops_apps/{app_uuid}/execute_definition": {
      "post": {
        "summary": "Execute Workflow Definition",
        "description": " This endpoint allows you to execute a workflow definition. You can use this endpoint to execute a workflow definition and get the execution id to check the status of the execution.\n\n Preconditions: the app must be **published**.\n\n\n> This endpoint executes the app immediately and returns the result, unless you are at your current capacity, or your app takes more than 10 minutes to run, in which case it will fail.\n\n If you want to execute an app asynchronously, use the [async_execute_definition](#/paths/~1public_api~1airops_apps~1{app_uuid}~1async_execute_definition/post) endpoint.\n\n ",
        "tags": [
          "Executions"
        ],
        "operationId": "executeDefinition",
        "parameters": [
          {
            "name": "app_uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The app uuid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "inputs": {
                    "type": "object",
                    "example": {
                      "name": "John Doe"
                    },
                    "description": "The inputs of the workflow"
                  },
                  "inputs_schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "interface": {
                          "type": "string",
                          "enum": [
                            "long_text",
                            "short_text",
                            "json",
                            "single_select",
                            "number"
                          ]
                        },
                        "label": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "hint": {
                          "type": "string"
                        },
                        "required": {
                          "type": "boolean"
                        },
                        "group_id": {
                          "type": "string",
                          "enum": [
                            "no-group"
                          ]
                        },
                        "action_id": {
                          "type": "string"
                        },
                        "placeholder": {
                          "type": "string"
                        },
                        "test_value": {
                          "type": "string"
                        },
                        "options": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "interface",
                        "label",
                        "name",
                        "hint",
                        "required",
                        "group_id",
                        "action_id",
                        "placeholder",
                        "options"
                      ]
                    },
                    "example": [
                      {
                        "interface": "long_text",
                        "label": "Name",
                        "name": "name",
                        "hint": "Enter your name",
                        "required": true,
                        "group_id": "no-group",
                        "action_id": "name",
                        "placeholder": "Enter your name",
                        "test_value": "John Doe",
                        "options": []
                      }
                    ]
                  },
                  "definition": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/WorkflowStep"
                    },
                    "example": [
                      {
                        "name": "step_1",
                        "type": "llm",
                        "config": {
                          "model": "gpt-3.5-turbo-instruct",
                          "soft_fail": false,
                          "config": {
                            "prompt": "Provide a nickname for {{inputs.name}}",
                            "request_consistent_results": true,
                            "response_format": "text",
                            "stream": false,
                            "temperature": 0.5,
                            "note": "",
                            "model_source": "airops",
                            "max_tokens": 100
                          }
                        }
                      },
                      {
                        "name": "step_2",
                        "type": "app",
                        "config": {
                          "app_id": 1,
                          "inputs": {
                            "name": "{{step_1.output}}"
                          }
                        }
                      },
                      {
                        "name": "step_3",
                        "type": "text",
                        "config": {
                          "text": "Hello {{step_2.output}}!"
                        }
                      }
                    ]
                  }
                },
                "required": [
                  "inputs",
                  "inputs_schema",
                  "definition"
                ]
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Execution created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "airops_app_execution": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "pending",
                            "running",
                            "error",
                            "success",
                            "cancelled",
                            "review_needed"
                          ],
                          "example": "success"
                        },
                        "airops_apps_version_id": {
                          "type": "integer",
                          "example": 21
                        },
                        "conversation_id": {
                          "type": "string",
                          "example": 23
                        },
                        "credits_used": {
                          "type": "integer",
                          "example": 34
                        },
                        "error_code": {
                          "type": "string",
                          "example": null
                        },
                        "error_message": {
                          "example": null
                        },
                        "feedback": {
                          "type": "string",
                          "enum": [
                            "positive",
                            "neutral",
                            "negative"
                          ]
                        },
                        "inputs": {
                          "type": "object",
                          "example": {
                            "name": "John Doe"
                          }
                        },
                        "output": {
                          "type": "object",
                          "example": {
                            "greet": "Hello John Doe!"
                          }
                        },
                        "runtime": {
                          "type": "integer",
                          "example": 34,
                          "description": "The time it took to execute the app in seconds"
                        },
                        "source": {
                          "type": "string"
                        },
                        "uuid": {
                          "type": "string",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "c3405f16-d0e8-4d5c-8ad9-85ef332c44ee"
                        },
                        "workspace_id": {
                          "type": "integer",
                          "example": 1
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-02-01T16:39:28.161Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-02-01T16:39:28.161Z"
                        }
                      },
                      "required": [
                        "id",
                        "status",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  }
                },
                "example": {
                  "id": 22,
                  "status": "success",
                  "airops_apps_version_id": 21,
                  "conversation_id": 23,
                  "credits_used": 34,
                  "error_code": null,
                  "error_message": null,
                  "feedback": "positive",
                  "inputs": {
                    "name": "John Doe"
                  },
                  "output": {
                    "greet": "Hello John Doe!"
                  },
                  "runtime": 34,
                  "source": null,
                  "uuid": "c3405f16-d0e8-4d5c-8ad9-85ef332c44ee",
                  "workspace_id": 1,
                  "createdAt": "2024-02-01T16:39:28.161Z",
                  "updatedAt": "2024-02-01T16:39:28.161Z"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "name_input_value can't be blank"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error"
          }
        }
      }
    },
    "/public_api/airops_apps/{app_uuid}/async_execute_definition": {
      "post": {
        "summary": "Async Execute Workflow Definition",
        "description": " This endpoint allows you to execute a workflow definition asynchronously. You can use this endpoint to execute a workflow definition and get the execution id to check the status of the execution.\n\n Preconditions: the app must be **published**.\n\n\n> Executions created through this endpoint will be queued and executed at your workspace's capacity.\n\n If you want to execute a workflow definition immediately, use the [execute_definition](#/paths/~1public_api~1airops_apps~1{app_uuid}~1execute_definition/post) endpoint.\n\n ",
        "tags": [
          "Executions"
        ],
        "operationId": "asyncExecuteDefinition",
        "parameters": [
          {
            "name": "app_uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The app uuid, you can find the app uuid by going to the App => Integrate"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "inputs": {
                    "type": "object",
                    "example": {
                      "name": "John Doe"
                    },
                    "description": "The inputs of the workflow"
                  },
                  "inputs_schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "interface": {
                          "type": "string",
                          "enum": [
                            "long_text",
                            "short_text",
                            "json",
                            "single_select",
                            "number"
                          ]
                        },
                        "label": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "hint": {
                          "type": "string"
                        },
                        "required": {
                          "type": "boolean"
                        },
                        "group_id": {
                          "type": "string",
                          "enum": [
                            "no-group"
                          ]
                        },
                        "action_id": {
                          "type": "string"
                        },
                        "placeholder": {
                          "type": "string"
                        },
                        "test_value": {
                          "type": "string"
                        },
                        "options": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "interface",
                        "label",
                        "name",
                        "hint",
                        "required",
                        "group_id",
                        "action_id",
                        "placeholder",
                        "options"
                      ]
                    },
                    "example": [
                      {
                        "interface": "long_text",
                        "label": "Name",
                        "name": "name",
                        "hint": "Enter your name",
                        "required": true,
                        "group_id": "no-group",
                        "action_id": "name",
                        "placeholder": "Enter your name",
                        "test_value": "John Doe",
                        "options": []
                      }
                    ]
                  },
                  "definition": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/WorkflowStep"
                    },
                    "example": [
                      {
                        "name": "step_1",
                        "type": "llm",
                        "config": {
                          "model": "gpt-3.5-turbo-instruct",
                          "soft_fail": false,
                          "config": {
                            "prompt": "Provide a nickname for {{inputs.name}}",
                            "request_consistent_results": true,
                            "response_format": "text",
                            "stream": false,
                            "temperature": 0.5,
                            "note": "",
                            "model_source": "airops",
                            "max_tokens": 100
                          }
                        }
                      },
                      {
                        "name": "step_2",
                        "type": "app",
                        "config": {
                          "app_id": 1,
                          "inputs": {
                            "name": "{{step_1.output}}"
                          }
                        }
                      },
                      {
                        "name": "step_3",
                        "type": "text",
                        "config": {
                          "text": "Hello {{step_2.output}}!"
                        }
                      }
                    ]
                  }
                },
                "required": [
                  "inputs",
                  "inputs_schema",
                  "definition"
                ]
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Execution created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "airops_app_execution": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "pending",
                            "running",
                            "error",
                            "success",
                            "cancelled",
                            "review_needed"
                          ],
                          "example": "success"
                        },
                        "airops_apps_version_id": {
                          "type": "integer",
                          "example": 21
                        },
                        "conversation_id": {
                          "type": "string",
                          "example": 23
                        },
                        "credits_used": {
                          "type": "integer",
                          "example": 34
                        },
                        "error_code": {
                          "type": "string",
                          "example": null
                        },
                        "error_message": {
                          "example": null
                        },
                        "feedback": {
                          "type": "string",
                          "enum": [
                            "positive",
                            "neutral",
                            "negative"
                          ]
                        },
                        "inputs": {
                          "type": "object",
                          "example": {
                            "name": "John Doe"
                          }
                        },
                        "output": {
                          "type": "object",
                          "example": {
                            "greet": "Hello John Doe!"
                          }
                        },
                        "runtime": {
                          "type": "integer",
                          "example": 34,
                          "description": "The time it took to execute the app in seconds"
                        },
                        "source": {
                          "type": "string"
                        },
                        "uuid": {
                          "type": "string",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "c3405f16-d0e8-4d5c-8ad9-85ef332c44ee"
                        },
                        "workspace_id": {
                          "type": "integer",
                          "example": 1
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-02-01T16:39:28.161Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-02-01T16:39:28.161Z"
                        }
                      },
                      "required": [
                        "id",
                        "status",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  }
                },
                "example": {
                  "id": 22,
                  "status": "pending",
                  "airops_apps_version_id": 21,
                  "conversation_id": null,
                  "credits_used": 34,
                  "error_code": null,
                  "error_message": null,
                  "feedback": null,
                  "inputs": {
                    "name": "John Doe"
                  },
                  "output": null,
                  "runtime": null,
                  "source": null,
                  "uuid": "c3405f16-d0e8-4d5c-8ad9-85ef332c44ee",
                  "workspace_id": 1,
                  "createdAt": "2024-02-01T16:39:28.161Z",
                  "updatedAt": "2024-02-01T16:39:28.161Z"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "name_input_value can't be blank"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error"
          }
        }
      }
    },
    "/public_api/airops_apps/{app_uuid}/webhook_async_execute": {
      "post": {
        "summary": "Webhook Async Execute",
        "description": " This endpoint allows you to execute an app asynchronously as a webhook for an external service.\n\n The payload of the request will be mapped to the first input of your app.\n\n Preconditions: the app must be **published**.\n\n More information on how to use this endpoint can be found [here](https://airops.gitbook.io/docs/execute/advanced/incoming-webhook). ",
        "tags": [
          "Executions"
        ],
        "operationId": "WebhookAsyncExecuteApp",
        "parameters": [
          {
            "name": "app_uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The app uuid, you can find the app uuid by going to the App => Integrate"
          },
          {
            "name": "auth_token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "23iu3h23-34n43yib4-3243n34b4-34n434h",
              "description": "Your workspace API key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version_slug": {
                    "type": "integer",
                    "example": "12",
                    "description": "The version of the app (will use the default version if not provided)"
                  },
                  "inputs": {
                    "type": "object",
                    "example": {
                      "name": "John Doe"
                    },
                    "description": "The inputs of the app"
                  }
                },
                "required": [
                  "inputs"
                ]
              },
              "example": {
                "inputs": {
                  "name": "John Doe"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Execution created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "airops_app_execution": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "pending",
                            "running",
                            "error",
                            "success",
                            "cancelled",
                            "review_needed"
                          ],
                          "example": "success"
                        },
                        "airops_apps_version_id": {
                          "type": "integer",
                          "example": 21
                        },
                        "conversation_id": {
                          "type": "string",
                          "example": 23
                        },
                        "credits_used": {
                          "type": "integer",
                          "example": 34
                        },
                        "error_code": {
                          "type": "string",
                          "example": null
                        },
                        "error_message": {
                          "example": null
                        },
                        "feedback": {
                          "type": "string",
                          "enum": [
                            "positive",
                            "neutral",
                            "negative"
                          ]
                        },
                        "inputs": {
                          "type": "object",
                          "example": {
                            "name": "John Doe"
                          }
                        },
                        "output": {
                          "type": "object",
                          "example": {
                            "greet": "Hello John Doe!"
                          }
                        },
                        "runtime": {
                          "type": "integer",
                          "example": 34,
                          "description": "The time it took to execute the app in seconds"
                        },
                        "source": {
                          "type": "string"
                        },
                        "uuid": {
                          "type": "string",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "c3405f16-d0e8-4d5c-8ad9-85ef332c44ee"
                        },
                        "workspace_id": {
                          "type": "integer",
                          "example": 1
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-02-01T16:39:28.161Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-02-01T16:39:28.161Z"
                        }
                      },
                      "required": [
                        "id",
                        "status",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  }
                },
                "example": [
                  {
                    "id": 22,
                    "status": "success",
                    "airops_apps_version_id": 21,
                    "conversation_id": 23,
                    "credits_used": 34,
                    "error_code": null,
                    "error_message": null,
                    "feedback": "positive",
                    "inputs": {
                      "name": "John Doe"
                    },
                    "output": {
                      "greet": "Hello John Doe!"
                    },
                    "runtime": 34,
                    "source": null,
                    "uuid": "c3405f16-d0e8-4d5c-8ad9-85ef332c44ee",
                    "workspace_id": 1,
                    "createdAt": "2024-02-01T16:39:28.161Z",
                    "updatedAt": "2024-02-01T16:39:28.161Z"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "name_input_value can't be blank"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error"
          }
        }
      }
    },
    "/public_api/airops_apps/executions/{execution_uuid}/cancel": {
      "patch": {
        "summary": "Cancel an execution",
        "description": " This endpoint allows you to cancel an execution.\n\n Preconditions: the execution must be in the **pending** or **running** status.\n\n ",
        "tags": [
          "Executions"
        ],
        "parameters": [
          {
            "name": "execution_uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The execution uuid"
          }
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Execution cancelled"
          },
          "401": {
            "description": "Authentication error"
          }
        }
      }
    },
    "/public_api/airops_apps/executions/{execution_uuid}/retry": {
      "post": {
        "summary": "Retry an execution",
        "description": " This endpoint allows you to retry an execution from the last failed step.\n\n Preconditions: the execution must be in the **error** status.\n\n ",
        "tags": [
          "Executions"
        ],
        "parameters": [
          {
            "name": "execution_uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The execution uuid"
          }
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Execution retried"
          },
          "400": {
            "description": "Execution is not in error status"
          },
          "401": {
            "description": "Authentication error"
          }
        }
      }
    },
    "/public_api/airops_apps/executions/{execution_uuid}/feedback": {
      "patch": {
        "summary": "Rate an execution",
        "description": " This endpoint allows you to rate an execution.\n\n Preconditions: the execution must be in the **success** status.\n\n ",
        "tags": [
          "Executions"
        ],
        "parameters": [
          {
            "name": "execution_uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The execution uuid"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "feedback": {
                    "type": "string",
                    "enum": [
                      "positive",
                      "neutral",
                      "negative"
                    ],
                    "example": "positive",
                    "description": "The feedback of the execution"
                  }
                },
                "required": [
                  "feedback"
                ]
              },
              "example": {
                "feedback": "positive"
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Feedback sent"
          },
          "401": {
            "description": "Authentication error"
          }
        }
      }
    },
    "/public_api/airops_apps/:airops_app_id/executions": {
      "get": {
        "summary": "Retrieve all executions for an Airops app",
        "description": "Returns all the **executions** for a given Airops app. You can use this endpoint to check the status/input/output of all the executions.\n",
        "tags": [
          "Executions"
        ],
        "parameters": [
          {
            "name": "airops_app_id",
            "in": "query",
            "required": true,
            "description": "The Airops app ID to fetch executions from",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "description": "The cursor value to use for pagination",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "items",
            "in": "query",
            "required": false,
            "description": "The amount of items to fetch",
            "schema": {
              "type": "integer",
              "example": 10,
              "minimum": 1,
              "maximum": 100
            }
          }
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Executions found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "description": "The list of executions returned",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "pending",
                              "running",
                              "error",
                              "success",
                              "cancelled",
                              "review_needed"
                            ],
                            "example": "success"
                          },
                          "airops_apps_version_id": {
                            "type": "integer",
                            "example": 21
                          },
                          "conversation_id": {
                            "type": "string",
                            "example": 23
                          },
                          "credits_used": {
                            "type": "integer",
                            "example": 34
                          },
                          "error_code": {
                            "type": "string",
                            "example": null
                          },
                          "error_message": {
                            "example": null
                          },
                          "feedback": {
                            "type": "string",
                            "enum": [
                              "positive",
                              "neutral",
                              "negative"
                            ]
                          },
                          "inputs": {
                            "type": "object",
                            "example": {
                              "name": "John Doe"
                            }
                          },
                          "output": {
                            "type": "object",
                            "example": {
                              "greet": "Hello John Doe!"
                            }
                          },
                          "runtime": {
                            "type": "integer",
                            "example": 34,
                            "description": "The time it took to execute the app in seconds"
                          },
                          "source": {
                            "type": "string"
                          },
                          "uuid": {
                            "type": "string",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "c3405f16-d0e8-4d5c-8ad9-85ef332c44ee"
                          },
                          "workspace_id": {
                            "type": "integer",
                            "example": 1
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-02-01T16:39:28.161Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-02-01T16:39:28.161Z"
                          }
                        },
                        "required": [
                          "id",
                          "status",
                          "createdAt",
                          "updatedAt"
                        ]
                      }
                    },
                    "meta": {
                      "type": "object",
                      "description": "Pagination information",
                      "properties": {
                        "count": {
                          "type": "integer",
                          "description": "Total amount of records in all pages"
                        },
                        "has_more": {
                          "type": "boolean",
                          "description": "Whether there are more records to fetch"
                        },
                        "cursor": {
                          "type": "string",
                          "description": "Cursor value to use in the next request"
                        }
                      }
                    }
                  }
                },
                "example": [
                  {
                    "data": [
                      {
                        "id": 22,
                        "status": "success",
                        "airops_apps_version_id": 21,
                        "conversation_id": 23,
                        "credits_used": 34,
                        "error_code": null,
                        "error_message": null,
                        "feedback": "positive",
                        "inputs": {
                          "name": "John Doe"
                        },
                        "output": {
                          "greet": "Hello John Doe!"
                        },
                        "runtime": 34,
                        "source": null,
                        "uuid": "c3405f16-d0e8-4d5c-8ad9-85ef332c44ee",
                        "workspace_id": 1,
                        "createdAt": "2024-02-01T16:39:28.161Z",
                        "updatedAt": "2024-02-01T16:39:28.161Z"
                      }
                    ],
                    "meta": {
                      "count": 2,
                      "has_more": true,
                      "cursor": 22
                    }
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Authentication error"
          }
        }
      }
    },
    "/public_api/airops_apps": {
      "get": {
        "summary": "Retrieve all apps",
        "description": " Returns all the **apps**. ",
        "tags": [
          "Apps"
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Apps found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 297
                      },
                      "name": {
                        "type": "string",
                        "example": "my draft"
                      },
                      "description": {
                        "type": "string",
                        "example": "draft"
                      },
                      "background_color": {
                        "type": "string",
                        "example": "#fea"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-06-20T00:49:56.696Z"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-24T11:26:21.820Z"
                      },
                      "active_version_id": {
                        "type": "integer",
                        "example": 44
                      },
                      "emoji": {
                        "type": "string",
                        "example": ""
                      },
                      "public": {
                        "type": "boolean",
                        "example": false
                      },
                      "uuid": {
                        "type": "string",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "6d2f4e0b-1a1d-49ae-8034-ba56f932119e"
                      },
                      "readme": {
                        "type": "string",
                        "example": ""
                      }
                    }
                  }
                },
                "example": [
                  {
                    "id": 297,
                    "name": "my draft",
                    "description": "draft",
                    "background_color": "#fea",
                    "created_at": "2023-06-20T00:49:56.696Z",
                    "updated_at": "2023-10-24T11:26:21.820Z",
                    "active_version_id": 44,
                    "emoji": "",
                    "public": false,
                    "uuid": "6d2f4e0b-1a1d-49ae-8034-ba56f932119e",
                    "readme": ""
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Authentication error"
          }
        }
      }
    },
    "/public_api/airops_apps/{app_uuid}": {
      "get": {
        "summary": "Retrieve an app",
        "description": " Returns the **app** with the given uuid. ",
        "tags": [
          "Apps"
        ],
        "operationId": "getApp",
        "parameters": [
          {
            "name": "app_uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The app uuid, you can find the app uuid by going to the App => Integrate"
          }
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "App found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 297
                    },
                    "name": {
                      "type": "string",
                      "example": "my draft"
                    },
                    "description": {
                      "type": "string",
                      "example": "draft"
                    },
                    "background_color": {
                      "type": "string",
                      "example": "#fea"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-06-20T00:49:56.696Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-10-24T11:26:21.820Z"
                    },
                    "active_version_id": {
                      "type": "integer",
                      "example": 44
                    },
                    "emoji": {
                      "type": "string",
                      "example": ""
                    },
                    "public": {
                      "type": "boolean",
                      "example": false
                    },
                    "uuid": {
                      "type": "string",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "6d2f4e0b-1a1d-49ae-8034-ba56f932119e"
                    },
                    "readme": {
                      "type": "string",
                      "example": ""
                    }
                  }
                },
                "example": {
                  "id": 297,
                  "name": "my draft",
                  "description": "draft",
                  "background_color": "#fea",
                  "created_at": "2023-06-20T00:49:56.696Z",
                  "updated_at": "2023-10-24T11:26:21.820Z",
                  "active_version_id": 44,
                  "emoji": "",
                  "public": false,
                  "uuid": "6d2f4e0b-1a1d-49ae-8034-ba56f932119e",
                  "readme": ""
                }
              }
            }
          },
          "401": {
            "description": "Authentication error"
          }
        }
      }
    },
    "/public_api/agent_apps/{app_uuid}/chat": {
      "post": {
        "summary": "Chat",
        "description": "This endpoint allows you to send a message (chat) to an Agent app. You can include inputs with your message which will be passed to the app.\n",
        "tags": [
          "Agent"
        ],
        "operationId": "chatWithAgent",
        "parameters": [
          {
            "name": "app_uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The app uuid, you can find the app uuid by going to the App => Integrate"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "message"
                ],
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Hello, I need help with this.",
                    "description": "The message to send to the agent"
                  },
                  "session_id": {
                    "type": "string",
                    "example": "23iu3h23-34n43yib4-3243n34b4-34n434h",
                    "description": "The session id of the chat. Use the session_id to send a message to an existing conversation. If not present, a new session will be created after sending the first message."
                  },
                  "inputs": {
                    "type": "object",
                    "additionalProperties": true,
                    "description": "Optional inputs to send along with the message.",
                    "example": {
                      "name": "John Doe"
                    }
                  }
                }
              },
              "example": {
                "message": "Hello, how are you?",
                "inputs": {
                  "name": "John Doe"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Message sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "additionalProperties": true,
                      "description": "The result from calling the agent",
                      "example": {
                        "response": "How can I help you?",
                        "session_id": "23iu3h23-34n43yib4-3243n34b4-34n434h"
                      }
                    },
                    "airops_app_execution": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "pending",
                            "running",
                            "error",
                            "success",
                            "cancelled",
                            "review_needed"
                          ],
                          "example": "success"
                        },
                        "airops_apps_version_id": {
                          "type": "integer",
                          "example": 21
                        },
                        "conversation_id": {
                          "type": "string",
                          "example": 23
                        },
                        "credits_used": {
                          "type": "integer",
                          "example": 34
                        },
                        "error_code": {
                          "type": "string",
                          "example": null
                        },
                        "error_message": {
                          "example": null
                        },
                        "feedback": {
                          "type": "string",
                          "enum": [
                            "positive",
                            "neutral",
                            "negative"
                          ]
                        },
                        "inputs": {
                          "type": "object",
                          "example": {
                            "name": "John Doe"
                          }
                        },
                        "output": {
                          "type": "object",
                          "example": {
                            "greet": "Hello John Doe!"
                          }
                        },
                        "runtime": {
                          "type": "integer",
                          "example": 34,
                          "description": "The time it took to execute the app in seconds"
                        },
                        "source": {
                          "type": "string"
                        },
                        "uuid": {
                          "type": "string",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "c3405f16-d0e8-4d5c-8ad9-85ef332c44ee"
                        },
                        "workspace_id": {
                          "type": "integer",
                          "example": 1
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-02-01T16:39:28.161Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-02-01T16:39:28.161Z"
                        }
                      },
                      "required": [
                        "id",
                        "status",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  }
                },
                "example": {
                  "result": {
                    "message": "Hello, how are you?.",
                    "session_id": "23iu3h23-34n43yib4-3243n34b4-34n434h"
                  },
                  "airops_app_execution": {
                    "id": 22,
                    "status": "success",
                    "airops_apps_version_id": 21,
                    "conversation_id": 23,
                    "credits_used": 34,
                    "error_code": null,
                    "error_message": null,
                    "feedback": "positive",
                    "inputs": {
                      "name": "John Doe"
                    },
                    "output": {
                      "greet": "Hello John Doe!"
                    },
                    "runtime": 34,
                    "source": null,
                    "uuid": "c3405f16-d0e8-4d5c-8ad9-85ef332c44ee",
                    "workspace_id": 1,
                    "createdAt": "2024-02-01T16:39:28.161Z",
                    "updatedAt": "2024-02-01T16:39:28.161Z"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error"
          }
        }
      }
    },
    "/public_api/agent_apps/{app_uuid}/async_chat": {
      "post": {
        "summary": "Async Chat",
        "description": "This endpoint allows you to send a message (chat) to an Agent app asynchronously, without waiting for the response. You can include inputs with your message which will be passed to the app.\n",
        "tags": [
          "Agent"
        ],
        "operationId": "asyncChatWithAgent",
        "parameters": [
          {
            "name": "app_uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The app uuid, you can find the app uuid by going to the App => Integrate"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Hello, how are you?",
                    "description": "The message to send to the agent."
                  },
                  "inputs": {
                    "type": "object",
                    "description": "Optional inputs to send along with the message.",
                    "example": {
                      "name": "John Doe"
                    },
                    "additionalProperties": true
                  }
                },
                "required": [
                  "message"
                ]
              },
              "example": {
                "message": "Hello, how are you?",
                "inputs": {
                  "name": "John Doe"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Message sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "session_id": {
                      "type": "string",
                      "example": "23iu3h23-34n43yib4-3243n34b4-34n434h",
                      "description": "The session id of the chat. Use the session_id to send a message to an existing conversation. If not present, a new session will be created after sending the first message."
                    },
                    "airops_app_execution": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "pending",
                            "running",
                            "error",
                            "success",
                            "cancelled",
                            "review_needed"
                          ],
                          "example": "success"
                        },
                        "airops_apps_version_id": {
                          "type": "integer",
                          "example": 21
                        },
                        "conversation_id": {
                          "type": "string",
                          "example": 23
                        },
                        "credits_used": {
                          "type": "integer",
                          "example": 34
                        },
                        "error_code": {
                          "type": "string",
                          "example": null
                        },
                        "error_message": {
                          "example": null
                        },
                        "feedback": {
                          "type": "string",
                          "enum": [
                            "positive",
                            "neutral",
                            "negative"
                          ]
                        },
                        "inputs": {
                          "type": "object",
                          "example": {
                            "name": "John Doe"
                          }
                        },
                        "output": {
                          "type": "object",
                          "example": {
                            "greet": "Hello John Doe!"
                          }
                        },
                        "runtime": {
                          "type": "integer",
                          "example": 34,
                          "description": "The time it took to execute the app in seconds"
                        },
                        "source": {
                          "type": "string"
                        },
                        "uuid": {
                          "type": "string",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "c3405f16-d0e8-4d5c-8ad9-85ef332c44ee"
                        },
                        "workspace_id": {
                          "type": "integer",
                          "example": 1
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-02-01T16:39:28.161Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-02-01T16:39:28.161Z"
                        }
                      },
                      "required": [
                        "id",
                        "status",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  }
                },
                "example": {
                  "session_id": "23iu3h23-34n43yib4-3243n34b4-34n434h",
                  "airops_app_execution": {
                    "id": 22,
                    "status": "success",
                    "airops_apps_version_id": 21,
                    "conversation_id": 23,
                    "credits_used": 34,
                    "error_code": null,
                    "error_message": null,
                    "feedback": "positive",
                    "inputs": {
                      "name": "John Doe"
                    },
                    "output": {
                      "greet": "Hello John Doe!"
                    },
                    "runtime": 34,
                    "source": null,
                    "uuid": "c3405f16-d0e8-4d5c-8ad9-85ef332c44ee",
                    "workspace_id": 1,
                    "createdAt": "2024-02-01T16:39:28.161Z",
                    "updatedAt": "2024-02-01T16:39:28.161Z"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error"
          }
        }
      }
    },
    "/public_api/workspace_files": {
      "post": {
        "summary": "Upload",
        "description": " This endpoint allows you to upload a file to the workspace.\nYou can use this endpoint to upload a file and get the id of the file to use as an input in an app. ",
        "operationId": "workspaceFileUpload",
        "tags": [
          "Files"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": [
                  "file"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 23,
                      "description": "The id of the file, you can use this id as an app's input"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-06-20T00:49:56.696Z"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-10-24T11:26:21.820Z"
                    }
                  }
                },
                "example": {
                  "id": 23,
                  "created_at": "2023-06-20T00:49:56.696Z",
                  "updated_at": "2023-10-24T11:26:21.820Z"
                }
              }
            }
          },
          "401": {
            "description": "Authentication error'"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/public_api/vector_stores/{memory_store_id}/search": {
      "get": {
        "summary": "Search",
        "description": "Perform a search on a memory store.",
        "tags": [
          "Memory Stores"
        ],
        "operationId": "searchMemoryStore",
        "parameters": [
          {
            "description": "The Memory Store id",
            "name": "memory_store_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The query to search for"
          },
          {
            "name": "topk",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 10,
              "minimum": 1,
              "maximum": 1000
            },
            "description": "The number of results to return"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The filter to apply to the search. See https://docs.airops.com/basic-setup/memory-stores/memory-stores-metadata#how-to-filter-on-metadata for more information."
          }
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Results found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "matches": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "score": {
                            "type": "number"
                          },
                          "content": {
                            "type": "string"
                          },
                          "document_name": {
                            "type": "string"
                          },
                          "metadata": {
                            "type": "object"
                          }
                        },
                        "required": [
                          "id",
                          "score",
                          "content",
                          "document_name",
                          "metadata"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "401": {
            "description": "Authentication error"
          }
        }
      }
    },
    "/public_api/vector_stores/{memory_store_id}/vector_store_documents": {
      "post": {
        "summary": "Add Document",
        "description": "Add a document to a memory store.",
        "tags": [
          "Memory Stores"
        ],
        "operationId": "addDocumentToMemoryStore",
        "parameters": [
          {
            "description": "The Memory Store id",
            "name": "memory_store_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string",
                    "description": "The content of the document"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the document"
                  },
                  "metadata": {
                    "type": "object",
                    "description": "The metadata of the document"
                  }
                },
                "required": [
                  "name",
                  "text"
                ]
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Document added",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "document_type": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "source": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "sync_progress_percentage": {
                      "type": "number"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "vector_store_id": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "401": {
            "description": "Authentication error"
          }
        }
      }
    },
    "/public_api/vector_stores/{memory_store_id}/vector_store_documents/{memory_store_document_id}": {
      "put": {
        "summary": "Update Document",
        "description": "Update a document in a memory store.",
        "tags": [
          "Memory Stores"
        ],
        "operationId": "updateDocumentInMemoryStore",
        "parameters": [
          {
            "description": "The Memory Store id",
            "name": "memory_store_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The id of the document to update",
            "name": "memory_store_document_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string",
                    "description": "The content of the document"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the document"
                  },
                  "metadata": {
                    "type": "object",
                    "description": "The metadata of the document"
                  }
                },
                "required": [
                  "name",
                  "text"
                ]
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Document updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "document_type": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "source": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "sync_progress_percentage": {
                      "type": "number"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "vector_store_id": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error"
          }
        }
      },
      "delete": {
        "summary": "Delete Document",
        "description": "Delete a document from a memory store.",
        "tags": [
          "Memory Stores"
        ],
        "operationId": "deleteDocumentFromMemoryStore",
        "parameters": [
          {
            "description": "The Memory Store id",
            "name": "memory_store_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The id of the document to delete",
            "name": "memory_store_document_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Document deleted"
          },
          "401": {
            "description": "Authentication error"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "app_uuid": {
        "name": "app_uuid",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The app uuid, you can find the app uuid by going to the App => Integrate"
      },
      "execution_uuid": {
        "name": "execution_uuid",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The execution uuid"
      },
      "memory_store_id": {
        "name": "memory_store_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The Memory Store id"
      },
      "memory_store_document_id": {
        "name": "memory_store_document_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "examples": {
      "App": {
        "value": {
          "id": 297,
          "name": "my draft",
          "description": "draft",
          "background_color": "#fea",
          "created_at": "2023-06-20T00:49:56.696Z",
          "updated_at": "2023-10-24T11:26:21.820Z",
          "active_version_id": 44,
          "emoji": "",
          "public": false,
          "uuid": "6d2f4e0b-1a1d-49ae-8034-ba56f932119e",
          "readme": ""
        }
      },
      "ChatPayload": {
        "value": {
          "message": "Hello, how are you?.",
          "session_id": "23iu3h23-34n43yib4-3243n34b4-34n434h",
          "inputs": {
            "name": "John Doe"
          }
        }
      },
      "ChatResponse": {
        "value": {
          "result": {
            "message": "Hello, how are you?.",
            "session_id": "23iu3h23-34n43yib4-3243n34b4-34n434h"
          }
        }
      },
      "AiropsAppExecutions": {
        "value": {
          "data": [
            {
              "id": 22,
              "status": "success",
              "airops_apps_version_id": 21,
              "conversation_id": 23,
              "credits_used": 34,
              "error_code": null,
              "error_message": null,
              "feedback": "positive",
              "inputs": {
                "name": "John Doe"
              },
              "output": {
                "greet": "Hello John Doe!"
              },
              "runtime": 34,
              "source": null,
              "uuid": "c3405f16-d0e8-4d5c-8ad9-85ef332c44ee",
              "workspace_id": 1,
              "createdAt": "2024-02-01T16:39:28.161Z",
              "updatedAt": "2024-02-01T16:39:28.161Z"
            }
          ],
          "meta": {
            "count": 2,
            "has_more": true,
            "cursor": 22
          }
        }
      },
      "Execution": {
        "value": {
          "id": 22,
          "status": "success",
          "airops_apps_version_id": 21,
          "conversation_id": 23,
          "credits_used": 34,
          "error_code": null,
          "error_message": null,
          "feedback": "positive",
          "inputs": {
            "name": "John Doe"
          },
          "output": {
            "greet": "Hello John Doe!"
          },
          "runtime": 34,
          "source": null,
          "uuid": "c3405f16-d0e8-4d5c-8ad9-85ef332c44ee",
          "workspace_id": 1,
          "createdAt": "2024-02-01T16:39:28.161Z",
          "updatedAt": "2024-02-01T16:39:28.161Z"
        }
      }
    },
    "schemas": {
      "ChatPayload": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Hello, I need help with this.",
            "description": "The message to send to the agent"
          },
          "session_id": {
            "type": "string",
            "example": "23iu3h23-34n43yib4-3243n34b4-34n434h",
            "description": "The session id of the chat. Use the session_id to send a message to an existing conversation. If not present, a new session will be created after sending the first message."
          },
          "inputs": {
            "type": "object",
            "additionalProperties": true,
            "description": "Optional inputs to send along with the message.",
            "example": {
              "name": "John Doe"
            }
          }
        }
      },
      "ChatResponse": {
        "type": "object",
        "properties": {
          "result": {
            "type": "object",
            "additionalProperties": true,
            "description": "The result from calling the agent",
            "example": {
              "response": "How can I help you?",
              "session_id": "23iu3h23-34n43yib4-3243n34b4-34n434h"
            }
          }
        }
      },
      "App": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 297
          },
          "name": {
            "type": "string",
            "example": "my draft"
          },
          "description": {
            "type": "string",
            "example": "draft"
          },
          "background_color": {
            "type": "string",
            "example": "#fea"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2023-06-20T00:49:56.696Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2023-10-24T11:26:21.820Z"
          },
          "active_version_id": {
            "type": "integer",
            "example": 44
          },
          "emoji": {
            "type": "string",
            "example": ""
          },
          "public": {
            "type": "boolean",
            "example": false
          },
          "uuid": {
            "type": "string",
            "maxLength": 36,
            "minLength": 36,
            "example": "6d2f4e0b-1a1d-49ae-8034-ba56f932119e"
          },
          "readme": {
            "type": "string",
            "example": ""
          }
        }
      },
      "Execution": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "running",
              "error",
              "success",
              "cancelled",
              "review_needed"
            ],
            "example": "success"
          },
          "airops_apps_version_id": {
            "type": "integer",
            "example": 21
          },
          "conversation_id": {
            "type": "string",
            "example": 23
          },
          "credits_used": {
            "type": "integer",
            "example": 34
          },
          "error_code": {
            "type": "string",
            "example": null
          },
          "error_message": {
            "example": null
          },
          "feedback": {
            "type": "string",
            "enum": [
              "positive",
              "neutral",
              "negative"
            ]
          },
          "inputs": {
            "type": "object",
            "example": {
              "name": "John Doe"
            }
          },
          "output": {
            "type": "object",
            "example": {
              "greet": "Hello John Doe!"
            }
          },
          "runtime": {
            "type": "integer",
            "example": 34,
            "description": "The time it took to execute the app in seconds"
          },
          "source": {
            "type": "string"
          },
          "uuid": {
            "type": "string",
            "maxLength": 36,
            "minLength": 36,
            "example": "c3405f16-d0e8-4d5c-8ad9-85ef332c44ee"
          },
          "workspace_id": {
            "type": "integer",
            "example": 1
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-02-01T16:39:28.161Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-02-01T16:39:28.161Z"
          }
        },
        "required": [
          "id",
          "status",
          "createdAt",
          "updatedAt"
        ]
      },
      "MemoryStoreSearchResultItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "score": {
            "type": "number"
          },
          "content": {
            "type": "string"
          },
          "document_name": {
            "type": "string"
          },
          "metadata": {
            "type": "object"
          }
        },
        "required": [
          "id",
          "score",
          "content",
          "document_name",
          "metadata"
        ]
      },
      "MemoryStoreDocument": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "document_type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "sync_progress_percentage": {
            "type": "number"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "vector_store_id": {
            "type": "number"
          }
        }
      },
      "WorkflowStep": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "llm",
              "conditional",
              "app",
              "text",
              "web_scrape",
              "fetch_api",
              "code",
              "iteration"
            ]
          },
          "config": {
            "anyOf": [
              {
                "type": "object",
                "properties": {
                  "model": {
                    "type": "string"
                  },
                  "soft_fail": {
                    "type": "boolean"
                  },
                  "config": {
                    "type": "object",
                    "properties": {
                      "prompt": {
                        "type": "string",
                        "description": "Use `prompt` if the model is gpt-3.5-turbo-instruct. Otherwise, use `messages``."
                      },
                      "messages": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "role": {
                              "type": "string",
                              "enum": [
                                "user",
                                "system",
                                "assistant"
                              ]
                            },
                            "content": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "images": {
                              "type": "array",
                              "nullable": true,
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "role",
                            "content"
                          ]
                        }
                      },
                      "request_consistent_results": {
                        "type": "boolean"
                      },
                      "response_format": {
                        "type": "string",
                        "nullable": true,
                        "enum": [
                          "text",
                          "json_object"
                        ]
                      },
                      "stream": {
                        "type": "boolean"
                      },
                      "temperature": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1
                      },
                      "note": {
                        "type": "string"
                      },
                      "model_source": {
                        "type": "string",
                        "enum": [
                          "airops"
                        ]
                      },
                      "max_tokens": {
                        "type": "integer",
                        "nullable": true,
                        "minimum": 1
                      },
                      "json_schema": {
                        "type": "object",
                        "nullable": true,
                        "properties": {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "object"
                                  }
                                }
                              }
                            }
                          },
                          "strict": {
                            "type": "boolean"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "schema",
                          "strict",
                          "name"
                        ]
                      }
                    },
                    "required": [
                      "prompt",
                      "messages",
                      "request_consistent_results",
                      "response_format",
                      "stream",
                      "temperature",
                      "note",
                      "model_source",
                      "max_tokens"
                    ]
                  }
                },
                "required": [
                  "model",
                  "soft_fail",
                  "config"
                ]
              },
              {
                "$ref": "#/components/schemas/ConditionalConfig"
              },
              {
                "type": "object",
                "properties": {
                  "app_id": {
                    "type": "integer"
                  },
                  "app_version": {
                    "type": "integer",
                    "nullable": true
                  },
                  "inputs": {
                    "type": "object"
                  },
                  "soft_fail": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "app_id",
                  "inputs"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "template": {
                    "type": "string"
                  }
                },
                "required": [
                  "template"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "config": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string"
                      },
                      "max_length": {
                        "type": "integer",
                        "nullable": true,
                        "minimum": 0
                      },
                      "hard_fail": {
                        "type": "boolean",
                        "nullable": true
                      },
                      "render_js": {
                        "type": "boolean",
                        "nullable": true
                      },
                      "proxy_type": {
                        "type": "string",
                        "enum": [
                          "auto",
                          "datacenter",
                          "residential"
                        ]
                      },
                      "output_type": {
                        "type": "string",
                        "nullable": true,
                        "enum": [
                          "text",
                          "html",
                          "markdown"
                        ]
                      },
                      "timeout": {
                        "type": "integer",
                        "nullable": true,
                        "minimum": 5000,
                        "maximum": 150000
                      },
                      "remove_boilerplate": {
                        "type": "boolean",
                        "nullable": true
                      },
                      "optimize_for": {
                        "type": "string",
                        "enum": [
                          "custom",
                          "speed",
                          "accuracy"
                        ]
                      },
                      "soft_fail": {
                        "type": "boolean",
                        "nullable": true
                      },
                      "auto_scroll": {
                        "type": "boolean",
                        "nullable": true
                      }
                    },
                    "required": [
                      "url"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "string",
                    "description": "The jsonified body of the request"
                  },
                  "headers": {
                    "type": "string",
                    "description": "The jsonified headers of the request"
                  },
                  "method": {
                    "type": "string",
                    "enum": [
                      "get",
                      "post"
                    ]
                  },
                  "retries": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 3
                  },
                  "url": {
                    "type": "string"
                  },
                  "soft_fail": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "method",
                  "url"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "config": {
                    "type": "object",
                    "properties": {
                      "language": {
                        "type": "string",
                        "enum": [
                          "python",
                          "javascript"
                        ]
                      },
                      "function": {
                        "type": "string"
                      },
                      "soft_fail": {
                        "type": "boolean"
                      },
                      "lambda_function": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "language",
                      "function"
                    ]
                  }
                }
              },
              {
                "$ref": "#/components/schemas/IterationConfig"
              }
            ]
          }
        },
        "required": [
          "name",
          "type",
          "config"
        ]
      },
      "LLMConfig": {
        "type": "object",
        "properties": {
          "model": {
            "type": "string"
          },
          "soft_fail": {
            "type": "boolean"
          },
          "config": {
            "type": "object",
            "properties": {
              "prompt": {
                "type": "string",
                "description": "Use `prompt` if the model is gpt-3.5-turbo-instruct. Otherwise, use `messages``."
              },
              "messages": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "role": {
                      "type": "string",
                      "enum": [
                        "user",
                        "system",
                        "assistant"
                      ]
                    },
                    "content": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "images": {
                      "type": "array",
                      "nullable": true,
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "role",
                    "content"
                  ]
                }
              },
              "request_consistent_results": {
                "type": "boolean"
              },
              "response_format": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "text",
                  "json_object"
                ]
              },
              "stream": {
                "type": "boolean"
              },
              "temperature": {
                "type": "number",
                "minimum": 0,
                "maximum": 1
              },
              "note": {
                "type": "string"
              },
              "model_source": {
                "type": "string",
                "enum": [
                  "airops"
                ]
              },
              "max_tokens": {
                "type": "integer",
                "nullable": true,
                "minimum": 1
              },
              "json_schema": {
                "type": "object",
                "nullable": true,
                "properties": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "object"
                          }
                        }
                      }
                    }
                  },
                  "strict": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "schema",
                  "strict",
                  "name"
                ]
              }
            },
            "required": [
              "prompt",
              "messages",
              "request_consistent_results",
              "response_format",
              "stream",
              "temperature",
              "note",
              "model_source",
              "max_tokens"
            ]
          }
        },
        "required": [
          "model",
          "soft_fail",
          "config"
        ]
      },
      "ConditionalConfig": {
        "type": "object",
        "properties": {
          "condition": {
            "type": "string",
            "description": "The condition to evaluate. Must be javascript compatible code."
          },
          "if_branch": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowStep"
            }
          },
          "else_branch": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowStep"
            }
          }
        },
        "required": [
          "condition",
          "if_branch",
          "else_branch"
        ]
      },
      "AppConfig": {
        "type": "object",
        "properties": {
          "app_id": {
            "type": "integer"
          },
          "app_version": {
            "type": "integer",
            "nullable": true
          },
          "inputs": {
            "type": "object"
          },
          "soft_fail": {
            "type": "boolean"
          }
        },
        "required": [
          "app_id",
          "inputs"
        ]
      },
      "TextConfig": {
        "type": "object",
        "properties": {
          "template": {
            "type": "string"
          }
        },
        "required": [
          "template"
        ]
      },
      "WebScrapeConfig": {
        "type": "object",
        "properties": {
          "config": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              },
              "max_length": {
                "type": "integer",
                "nullable": true,
                "minimum": 0
              },
              "hard_fail": {
                "type": "boolean",
                "nullable": true
              },
              "render_js": {
                "type": "boolean",
                "nullable": true
              },
              "proxy_type": {
                "type": "string",
                "enum": [
                  "auto",
                  "datacenter",
                  "residential"
                ]
              },
              "output_type": {
                "type": "string",
                "nullable": true,
                "enum": [
                  "text",
                  "html",
                  "markdown"
                ]
              },
              "timeout": {
                "type": "integer",
                "nullable": true,
                "minimum": 5000,
                "maximum": 150000
              },
              "remove_boilerplate": {
                "type": "boolean",
                "nullable": true
              },
              "optimize_for": {
                "type": "string",
                "enum": [
                  "custom",
                  "speed",
                  "accuracy"
                ]
              },
              "soft_fail": {
                "type": "boolean",
                "nullable": true
              },
              "auto_scroll": {
                "type": "boolean",
                "nullable": true
              }
            },
            "required": [
              "url"
            ]
          }
        }
      },
      "FetchAPIConfig": {
        "type": "object",
        "properties": {
          "body": {
            "type": "string",
            "description": "The jsonified body of the request"
          },
          "headers": {
            "type": "string",
            "description": "The jsonified headers of the request"
          },
          "method": {
            "type": "string",
            "enum": [
              "get",
              "post"
            ]
          },
          "retries": {
            "type": "integer",
            "minimum": 0,
            "maximum": 3
          },
          "url": {
            "type": "string"
          },
          "soft_fail": {
            "type": "boolean"
          }
        },
        "required": [
          "method",
          "url"
        ]
      },
      "CodeConfig": {
        "type": "object",
        "properties": {
          "config": {
            "type": "object",
            "properties": {
              "language": {
                "type": "string",
                "enum": [
                  "python",
                  "javascript"
                ]
              },
              "function": {
                "type": "string"
              },
              "soft_fail": {
                "type": "boolean"
              },
              "lambda_function": {
                "type": "string"
              }
            },
            "required": [
              "language",
              "function"
            ]
          }
        }
      },
      "IterationConfig": {
        "type": "object",
        "properties": {
          "config": {
            "type": "object",
            "properties": {
              "iterator": {
                "type": "string"
              },
              "step_function": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WorkflowStep"
                }
              }
            },
            "required": [
              "iterator",
              "step_function"
            ]
          }
        }
      }
    },
    "securitySchemes": {
      "bearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "servers": [
    {
      "url": "https://api.airops.com",
      "variables": {
        "defaultHost": {
          "default": "api.airops.com"
        }
      }
    }
  ],
  "tags": [
    {
      "name": "Executions",
      "description": "An execution is a single run of an app, it contains the inputs, outputs, and status of the run, and can be used to check the status of the run.",
      "externalDocs": {
        "url": "https://docs.airops.com/getting-started/welcome/workflow-quick-start"
      }
    },
    {
      "name": "Agent",
      "description": "An endpoint for interacting with Agent apps using chat messages."
    }
  ]
}